"""swtiched

Revision ID: 66cc0c791c96
Revises: 61e250d33a62
Create Date: 2023-12-16 22:53:30.408411

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '66cc0c791c96'
down_revision: Union[str, None] = '61e250d33a62'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'passkey',
               existing_type=sa.VARCHAR(length=228),
               nullable=False)
    op.alter_column('users', 'telegram_id',
               existing_type=sa.VARCHAR(length=228),
               type_=sa.String(length=100),
               nullable=False)
    op.alter_column('users', 'role',
               existing_type=postgresql.ENUM('admin', 'creator', 'client', name='userroles'),
               type_=sa.String(length=100),
               nullable=False)
    op.drop_constraint('users_passkey_key', 'users', type_='unique')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('users_passkey_key', 'users', ['passkey'])
    op.alter_column('users', 'role',
               existing_type=sa.String(length=100),
               type_=postgresql.ENUM('admin', 'creator', 'client', name='userroles'),
               nullable=True)
    op.alter_column('users', 'telegram_id',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=228),
               nullable=True)
    op.alter_column('users', 'passkey',
               existing_type=sa.VARCHAR(length=228),
               nullable=True)
    # ### end Alembic commands ###
